--DROP TABLE USERS CASCADE;
--DROP TABLE CATEGORIES CASCADE;
--DROP TABLE EVENTS CASCADE;
--DROP TABLE COMPILATIONS CASCADE;
--DROP TABLE REQUESTS CASCADE;
--DROP TABLE EVENTS_COMPILATIONS CASCADE;

CREATE TABLE IF NOT EXISTS USERS (
user_id INTEGER generated by default as identity primary key,
email varchar(254) not null unique,
name varchar(250) not null
);

CREATE TABLE IF NOT EXISTS CATEGORIES (
category_id INTEGER generated by default as identity primary key,
title varchar(50) not null unique
);

CREATE TABLE IF NOT EXISTS EVENTS (
event_id INTEGER generated by default as identity primary key,
description varchar(7000) not null,
created_on timestamp WITHOUT TIME ZONE not null,
event_date timestamp WITHOUT TIME ZONE not null,
annotation varchar(2000) not null,
category_id INTEGER not null constraint events_categories_id_fk references categories(category_id),
confirmed_requests int not null,
initiator_id int REFERENCES USERS(user_id),
latitude float not null,
longitude float not null,
paid boolean not null,
participant_limit int not null,
published_on timestamp WITHOUT TIME ZONE not null,
request_moderation boolean not null,
state varchar not null,
title varchar(120) not null,
views int not null
);

CREATE TABLE IF NOT EXISTS COMPILATIONS (
compilation_id INTEGER generated by default as identity primary key,
title varchar(50) not null,
pinned boolean
);

CREATE TABLE IF NOT EXISTS REQUESTS (
request_id INTEGER generated by default as identity primary key,
created timestamp WITHOUT TIME ZONE not null,
event_id INTEGER REFERENCES EVENTS(event_id),
requester_id INTEGER REFERENCES USERS(user_id),
status varchar(50) not null
);

CREATE TABLE IF NOT EXISTS EVENTS_COMPILATIONS (
event_id INTEGER not null
constraint events_compilations_events_id_fk
references events(event_id) on delete cascade,
compilation_id INTEGER not null
constraint events_compilations_compilations_id_fk
references compilations(compilation_id) on delete cascade
);